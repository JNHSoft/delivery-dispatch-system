<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.cntt.core.mapper.RiderMapper">

	<select id="selectLoginRider" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="String">
		SELECT login_id FROM TB_RIDER
		WHERE 1=1
		AND login_id = #{loginId}
			<!--AND login_pw = #{loginPw}-->
		limit 1
	</select>


	<!--
		- login ID  및 Aceess 토근 값체크
		- expiry_datetime 이 NULL 이거나 금일 datetime 보다 큰 값
	-->
	<select id="selectRiderTokenCheck" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="int">
		<![CDATA[
		SELECT
			COUNT(*)
		FROM TB_RIDER A JOIN TB_RIDER_SESSION B
		ON A.id = B.rider_id
		WHERE 1=1
			AND A.login_id = #{loginId}
			AND B.access_token = #{accessToken}
			AND (expiry_datetime IS NULL OR expiry_datetime > now())
		]]>
	</select>


	<!-- insertRiderSession -->
	<insert id="insertRiderSession" parameterType="kr.co.cntt.core.model.rider.Rider">
		<![CDATA[
		INSERT INTO TB_RIDER_SESSION(rider_id, access_token, created_datetime)
		SELECT
			id
			, #{accessToken}
			, now()
		FROM TB_RIDER
		WHERE login_id = #{loginId}
		]]>
	</insert>


	<select id="getRiderInfo" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="kr.co.cntt.core.model.rider.Rider">
		SELECT
			created_datetime
			, modified_datetime
			, last_access
			, admin_id
			, chat_user_id
			, id
			, name
			, phone
			, login_id
			, login_pw
			, code
			, gender
			, employment_type
			, address
			, working
			, status
			, latitude
			, longitude
			, location_updated
			, vehicle_number
			, emergency_phone
			, working_hours
			, rest_hours
			, teenager
			, deleted
		FROM TB_RIDER
		WHERE 1=1
		<choose>
			<when test="id != null and id != ''">
				<if test="(isAdmin != null and isAdmin != '') and isAdmin == 0">
					AND admin_id = (SELECT admin_id FROM TB_STORE WHERE id = (SELECT store_id FROM TB_STORE_SESSION WHERE access_token = #{token}))
				</if>
				<if test="(isAdmin != null and isAdmin != '') and isAdmin == 1">
					AND admin_id = (SELECT admin_id FROM TB_ADMIN_SESSION WHERE access_token = #{token})
				</if>
				AND id = #{id}
			</when>
			<otherwise>
				AND admin_id = (SELECT admin_id FROM TB_RIDER WHERE id = (SELECT rider_id FROM TB_RIDER_SESSION WHERE access_token = #{token}))
				AND id = (
				SELECT rider_id
				FROM TB_RIDER_SESSION
				WHERE access_token=#{accessToken}
				)
			</otherwise>
		</choose>
	</select>


	<!-- getStoreRiders -->
	<select id="getStoreRiders" parameterType="kr.co.cntt.core.model.store.Store" resultType="kr.co.cntt.core.model.rider.Rider">
		SELECT
			rid.created_datetime
			, rid.modified_datetime
			, rid.last_access
			, rid.chat_user_id
			, rid.admin_id
			, rid.id
			, rid.name
			, rid.phone
			, rid.login_id
			, rid.login_pw
			, rid.comment
			, rid.deleted
		FROM TB_RIDER AS rid
		INNER JOIN TB_STORE_RIDER_REL AS rel
		ON rid.id = rel.rider_id
		WHERE
			<choose>
			<when test="id != null and id != ''">
				rel.store_id = #{id}
			</when>
			<otherwise>
				rel.store_id = (
					SELECT store_id
					FROM TB_STORE_SESSION
					WHERE access_token = #{accessToken})
			</otherwise>
			</choose>
			AND
			rel.admin_id = (
				SELECT admin_id
				FROM TB_STORE AS st
				WHERE st.id = rel.store_id)
    </select>


	<!-- rider 정보 수정 -->
	<update id="updateRiderInfo" parameterType="kr.co.cntt.core.model.rider.Rider">
		UPDATE TB_RIDER AS A
		LEFT JOIN TB_SUBGROUP_RIDER_REL AS B
		ON A.id = B.rider_id
		SET
			A.modified_datetime = now()

			<if test="lastAccess != null and lastAccess != ''">
				, A.last_access = #{lastAccess}
			</if>

			<if test="name != null and name != ''">
				, A.name = #{name}
			</if>

			<if test="phone != null and phone != ''">
				, A.phone = #{phone}
			</if>

			<if test="code != null and code != ''">
				, A.code = #{code}
			</if>

			<if test="gender != null and gender != ''">
				, A.gender = #{gender}
			</if>

			<if test="employmentType != null and employmentType != ''">
				, A.employmentType = #{employmentType}
			</if>

			<if test="address != null and address != ''">
				, A.address = #{address}
			</if>

			<if test="working != null and working != ''">
				, A.working = #{working}
			</if>

			<if test="status != null and status != ''">
				, A.status = #{status}
			</if>

			<if test="vehicleNumber != null and vehicleNumber != ''">
				, A.vehicle_number = #{vehicleNumber}
			</if>

			<if test="emergencyPhone != null and emergencyPhone != ''">
				, A.emergency_phone = #{emergencyPhone}
			</if>

			<if test="workingHours != null and workingHours != ''">
				, A.workingHours = #{workingHours}
			</if>

			<if test="restHours != null and restHours != ''">
				, A.restHours = #{restHours}
			</if>

			<if test="teenager != null and teenager != ''">
				, A.teenager = #{teenager}
			</if>

			<if test="subGroupRiderRel != null">
				, B.modified_datetime = now()
				, B.store_id = #{subGroupRiderRel.storeId}
				, B.subgroup_id = #{subGroupRiderRel.subGroupId}
				, B.group_id = #{subGroupRiderRel.groupId}
			</if>
		WHERE 1=1
		<choose>
			<when test="id != null and id != ''">
				<if test="(isAdmin != null and isAdmin != '') and isAdmin == 0">
					AND A.admin_id = (SELECT admin_id FROM TB_STORE WHERE id = (SELECT store_id FROM TB_STORE_SESSION WHERE access_token = #{token}))
				</if>
				<if test="(isAdmin != null and isAdmin != '') and isAdmin == 1">
					AND A.admin_id = (SELECT admin_id FROM TB_ADMIN_SESSION WHERE access_token = #{token})
				</if>
				AND A.id = #{id}
			</when>
			<otherwise>
                AND A.admin_id = (SELECT * FROM (SELECT admin_id FROM TB_RIDER WHERE id = (SELECT rider_id FROM TB_RIDER_SESSION WHERE access_token = #{token})) AS D)
				AND A.id = (
                    SELECT rider_id
                    FROM TB_RIDER_SESSION
                    WHERE access_token=#{accessToken}
				)
			</otherwise>
		</choose>
	</update>

	<!-- rider 출/퇴근  -->
	<update id="updateWorkingRider" parameterType="kr.co.cntt.core.model.rider.Rider">
		UPDATE TB_RIDER
		SET
		modified_datetime = now()

		<if test="working != null and working != ''">
			, working=#{working}
		</if>

		WHERE
			id = (
		SELECT
			rider_id
		FROM
			TB_RIDER_SESSION
		WHERE
			access_token = #{accessToken}
		)

	</update>

	<!--rider 위치 정보 전송 -->
	<update id="updateRiderLocation" parameterType="kr.co.cntt.core.model.rider.Rider">
		UPDATE TB_RIDER
		SET
		modified_datetime = now()

		<if test="latitude != null and latitude != ''">
			, latitude = #{latitude}
		</if>

		<if test="longitude != null  and longitude != ''">
			, longitude = #{longitude}
		</if>

		, location_updated = now()
		WHERE
			id = (
				SELECT
					rider_id
				FROM
					TB_RIDER_SESSION
				WHERE
					access_token = #{accessToken})

	</update>

	<!--rider 자기 위치 정보 조회 -->
	<select id="getRiderLocation" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="kr.co.cntt.core.model.rider.Rider">
		SELECT
		  id
		, name
		, latitude
		, longitude
		, location_updated
		FROM TB_RIDER
		WHERE 1=1
		<choose>
			<when test="id != null and id != ''">
			AND	id = #{id}
			</when>

			<otherwise>
			AND	id = (
					SELECT
						rider_id
					FROM
						TB_RIDER_SESSION
					WHERE
						access_token = #{accessToken})
			</otherwise>
		</choose>
	</select>

	<!--rider 들 위치 정보 조회 admin -->
	<select id="getAdminRidersLocation" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="kr.co.cntt.core.model.rider.Rider">
		SELECT
		admin_id
		, name
		, latitude
		, longitude
		, location_updated
		FROM TB_RIDER
		WHERE 1=1
		AND	admin_id = (SELECT
					admin_id
				  FROM
					TB_ADMIN_SESSION
				  WHERE
					access_token = #{accessToken})
	</select>

	<!--rider 들 위치 정보 조회 store -->
	<select id="getStoreRidersLocation" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="kr.co.cntt.core.model.rider.Rider">
		SELECT
			TSR.store_id
			, name
			, latitude
			, longitude
			, location_updated
		FROM
			TB_RIDER TR
		join
			TB_STORE_RIDER_REL TSR
		on TR.id = TSR.rider_id
		WHERE
			TSR.modified_datetime IS NULL
		AND	TSR.store_id = (
			SELECT
				store_id
			FROM
				TB_STORE_SESSION
			WHERE
				access_token = #{accessToken})
	</select>

</mapper>
 
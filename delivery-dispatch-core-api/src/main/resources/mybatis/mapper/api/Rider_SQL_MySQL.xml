<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.cntt.core.mapper.RiderMapper">

	<!-- selectRidersResult -->
	<resultMap id="selectSubgroupRiderRelsResult" type="kr.co.cntt.core.model.rider.Rider">
		<result property="id" column="id" />

		<result property="loginId" column="login_id" />
		<result property="name" column="name" />
		<result property="code" column="code" />
		<result property="phone" column="phone" />
		<result property="gender" column="gender" />
		<result property="emergencyPhone" column="emergency_phone" />
		<result property="address" column="address" />
		<result property="workingHours" column="working_hours" />
		<result property="restHours" column="rest_hours" />
		<result property="teenager" column="teenager" />
		<result property="vehicleNumber" column="vehicle_number" />

		<result property="status" column="status" />
		<result property="working" column="working" />
		<result property="chatUserId" column="chat_user_id" />
		<result property="latitude" column="latitude" />
		<result property="longitude" column="longitude" />
		<result property="locationUpdated" column="location_updated" />

		<association property="group" column="group" javaType="kr.co.cntt.core.model.group.Group">
			<result property="id" column="group_id" />
			<result property="name" column="group_name" />
			<result property="adminId" column="group_admin_id" />
		</association>

		<association property="subGroup" column="subGroup" javaType="kr.co.cntt.core.model.group.SubGroup">
			<result property="id" column="subgroup_id" />
			<result property="groupId" column="subgroup_group_Id" />
			<result property="name" column="subgroup_name" />
			<result property="adminId" column="subgroup_admin_id" />
		</association>

		<association property="subGroupRiderRel" column="subGroupRiderRel" javaType="kr.co.cntt.core.model.group.SubGroupRiderRel">
			<result property="id" column="subGroupRiderRel_id" />
			<result property="adminId" column="subGroupRiderRel_admin_id" />
			<result property="groupId" column="subGroupRiderRel_group_id" />
			<result property="subGroupId" column="subGroupRiderRel_subgroup_id" />
			<result property="storeId" column="subGroupRiderRel_store_id" />
			<result property="riderId" column="subGroupRiderRel_rider_id" />

		</association>
	</resultMap>


	<select id="selectLoginRider" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="String">
		SELECT login_id FROM TB_RIDER
		WHERE 1=1
		AND login_id = #{loginId}
			<!--AND login_pw = #{loginPw}-->
		limit 1
	</select>


	<!--
		- login ID  및 Aceess 토근 값체크
		- expiry_datetime 이 NULL 이거나 금일 datetime 보다 큰 값
	-->
	<select id="selectRiderTokenCheck" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="int">
		<![CDATA[
		SELECT
			COUNT(*)
		FROM TB_RIDER A JOIN TB_RIDER_SESSION B
		ON A.id = B.rider_id
		WHERE 1=1
			AND A.login_id = #{loginId}
			AND B.access_token = #{accessToken}
			AND (expiry_datetime IS NULL OR expiry_datetime > now())
		]]>
	</select>


	<!-- insertRiderSession -->
	<insert id="insertRiderSession" parameterType="kr.co.cntt.core.model.rider.Rider">
		<![CDATA[
		INSERT INTO TB_RIDER_SESSION(rider_id, access_token, created_datetime)
		SELECT
			id
			, #{accessToken}
			, now()
		FROM TB_RIDER
		WHERE login_id = #{loginId}
		]]>
	</insert>

	<!--rider 정보 조회 -->
	<select id="getRiderInfo" parameterType="kr.co.cntt.core.model.rider.Rider" resultMap="selectSubgroupRiderRelsResult">
	  SELECT
		TR.created_datetime
		, TR.modified_datetime
		, TR.last_access
		, TR.admin_id
		, TR.chat_user_id
		, TR.id
		, TR.name
		, TR.phone
		, TR.login_id
		, TR.login_pw
		, TR.code
		, TR.gender
		, TR.employment_type
		, TR.address
		, TR.working
		, TR.status
		, TR.latitude
		, TR.longitude
		, TR.location_updated
		, TR.vehicle_number
		, TR.emergency_phone
		, TR.working_hours
		, TR.rest_hours
		, TR.teenager
		, TSG.id AS subgroup_id
		, TSG.group_id AS subgroup_group_id
		, TG.name AS group_name
		, TSG.name AS subgroup_name
		, TSG.admin_id AS subgroup_admin_id
		, TG.id AS group_id
		, TG.admin_id AS group_admin_id
		, SRR.id AS subGroupRiderRel_id
		, SRR.admin_id AS subGroupRiderRel_admin_id
		, SRR.group_id AS subGroupRiderRel_group_id
		, SRR.subgroup_id AS subGroupRiderRel_subgroup_id
		, SRR.store_id AS subGroupRiderRel_store_id
		, SRR.rider_id AS subGroupRiderRel_rider_id

		FROM TB_RIDER TR

		left join
		dde.TB_SUBGROUP_RIDER_REL AS SRR
		on TR.id = SRR.rider_id
		AND SRR.deleted is NULL

		left join
		TB_SUBGROUP AS TSG
		on SRR.group_id=TSG.id
		AND TSG.deleted is NULL

		left join
		TB_GROUP AS TG
		on SRR.group_id = TG.id
		AND TG.deleted is NULL

		WHERE 1=1
		<choose>
			<when test="id != null and id != ''">
				<if test="(isAdmin != null and isAdmin != '') and isAdmin == 0">
					AND TR.admin_id = (SELECT admin_id FROM TB_STORE WHERE id = (SELECT store_id FROM TB_STORE_SESSION WHERE access_token = #{token}))
				</if>
				<if test="(isAdmin != null and isAdmin != '') and isAdmin == 1">
					AND TR.admin_id = (SELECT admin_id FROM TB_ADMIN_SESSION WHERE access_token = #{token})
				</if>
				AND TR.id = #{id}
			</when>
			<otherwise>
				AND TR.admin_id = (SELECT admin_id FROM TB_RIDER WHERE id = (SELECT rider_id FROM TB_RIDER_SESSION WHERE access_token = #{token}))
				AND TR.id = (
				SELECT rider_id
				FROM TB_RIDER_SESSION
				WHERE access_token=#{accessToken}
				)
			</otherwise>
		</choose>
	</select>


	<!-- getStoreRiders -->
	<select id="getStoreRiders" parameterType="kr.co.cntt.core.model.store.Store" resultType="kr.co.cntt.core.model.rider.Rider">
		SELECT
			rid.created_datetime
			, rid.modified_datetime
			, rid.last_access
			, rid.chat_user_id
			, rid.admin_id
			, rid.id
			, rid.name
			, rid.phone
			, rid.login_id
			, rid.login_pw
			, rid.comment
			, rid.deleted
		FROM TB_RIDER AS rid
		INNER JOIN TB_STORE_RIDER_REL AS rel
		ON rid.id = rel.rider_id
		WHERE
			<choose>
			<when test="id != null and id != ''">
				rel.store_id = #{id}
			</when>
			<otherwise>
				rel.store_id = (
					SELECT store_id
					FROM TB_STORE_SESSION
					WHERE access_token = #{accessToken})
			</otherwise>
			</choose>
			AND
			rel.admin_id = (
				SELECT admin_id
				FROM TB_STORE AS st
				WHERE st.id = rel.store_id)
    </select>


	<!-- rider 정보 수정 -->
	<update id="updateRiderInfo" parameterType="kr.co.cntt.core.model.rider.Rider">
		UPDATE TB_RIDER AS A
		LEFT JOIN TB_SUBGROUP_RIDER_REL AS B
		ON A.id = B.rider_id
		SET
			A.modified_datetime = now()

			<if test="lastAccess != null and lastAccess != ''">
				, A.last_access = #{lastAccess}
			</if>

			<if test="name != null and name != ''">
				, A.name = #{name}
			</if>

			<if test="phone != null and phone != ''">
				, A.phone = #{phone}
			</if>

			<if test="code != null and code != ''">
				, A.code = #{code}
			</if>

			<if test="gender != null and gender != ''">
				, A.gender = #{gender}
			</if>

			<if test="employmentType != null and employmentType != ''">
				, A.employmentType = #{employmentType}
			</if>

			<if test="address != null and address != ''">
				, A.address = #{address}
			</if>

			<if test="working != null and working != ''">
				, A.working = #{working}
			</if>

			<if test="status != null and status != ''">
				, A.status = #{status}
			</if>

			<if test="vehicleNumber != null and vehicleNumber != ''">
				, A.vehicle_number = #{vehicleNumber}
			</if>

			<if test="emergencyPhone != null and emergencyPhone != ''">
				, A.emergency_phone = #{emergencyPhone}
			</if>

			<if test="workingHours != null and workingHours != ''">
				, A.workingHours = #{workingHours}
			</if>

			<if test="restHours != null and restHours != ''">
				, A.restHours = #{restHours}
			</if>

			<if test="teenager != null and teenager != ''">
				, A.teenager = #{teenager}
			</if>

			<if test="subGroupRiderRel != null">
				, B.modified_datetime = now()
				, B.store_id = #{subGroupRiderRel.storeId}
				, B.subgroup_id = #{subGroupRiderRel.subGroupId}
				, B.group_id = #{subGroupRiderRel.groupId}
			</if>
		WHERE 1=1
		<choose>
			<when test="id != null and id != ''">
				<if test="(isAdmin != null and isAdmin != '') and isAdmin == 0">
					AND A.admin_id = (SELECT admin_id FROM TB_STORE WHERE id = (SELECT store_id FROM TB_STORE_SESSION WHERE access_token = #{token}))
				</if>
				<if test="(isAdmin != null and isAdmin != '') and isAdmin == 1">
					AND A.admin_id = (SELECT admin_id FROM TB_ADMIN_SESSION WHERE access_token = #{token})
				</if>
				AND A.id = #{id}
			</when>
			<otherwise>
                AND A.admin_id = (SELECT * FROM (SELECT admin_id FROM TB_RIDER WHERE id = (SELECT rider_id FROM TB_RIDER_SESSION WHERE access_token = #{token})) AS D)
				AND A.id = (
                    SELECT rider_id
                    FROM TB_RIDER_SESSION
                    WHERE access_token=#{accessToken}
				)
			</otherwise>
		</choose>
	</update>

	<!-- rider 출/퇴근  -->
	<update id="updateWorkingRider" parameterType="kr.co.cntt.core.model.rider.Rider">
		UPDATE TB_RIDER
		SET
			modified_datetime = now()
		<if test="working == 1">
			, last_access = now()
		</if>

		<if test="working != null and working != ''">
			, working=#{working}
		</if>

		WHERE
			id = (
		SELECT
			rider_id
		FROM
			TB_RIDER_SESSION
		WHERE
			access_token = #{accessToken}
		)

	</update>

	<!--rider 위치 정보 전송 -->
	<update id="updateRiderLocation" parameterType="kr.co.cntt.core.model.rider.Rider">
		UPDATE TB_RIDER
		SET
		modified_datetime = now()

		<if test="latitude != null and latitude != ''">
			, latitude = #{latitude}
		</if>

		<if test="longitude != null  and longitude != ''">
			, longitude = #{longitude}
		</if>

		, location_updated = now()
		WHERE
			id = (
				SELECT
					rider_id
				FROM
					TB_RIDER_SESSION
				WHERE
					access_token = #{accessToken})

	</update>

	<!--rider 자기 위치 정보 조회 -->
	<select id="getRiderLocation" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="kr.co.cntt.core.model.rider.Rider">
		SELECT
		  id
		, name
		, latitude
		, longitude
		, location_updated
		FROM TB_RIDER
		WHERE 1=1
		<choose>
			<when test="id != null and id != ''">
			AND	id = #{id}
			</when>

			<otherwise>
			AND	id = (
					SELECT
						rider_id
					FROM
						TB_RIDER_SESSION
					WHERE
						access_token = #{accessToken})
			</otherwise>
		</choose>
	</select>

	<!--rider 들 위치 정보 조회 admin -->
	<select id="getAdminRidersLocation" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="kr.co.cntt.core.model.rider.Rider">
		SELECT
		admin_id
		, name
		, latitude
		, longitude
		, location_updated
		FROM TB_RIDER
		WHERE 1=1
		AND	admin_id = (SELECT
					admin_id
				  FROM
					TB_ADMIN_SESSION
				  WHERE
					access_token = #{accessToken})
	</select>

	<!--rider 들 위치 정보 조회 store -->
	<select id="getStoreRidersLocation" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="kr.co.cntt.core.model.rider.Rider">
		SELECT
			TSR.store_id
			, name
			, latitude
			, longitude
			, location_updated
		FROM
			TB_RIDER TR
		join
			TB_STORE_RIDER_REL TSR
		on TR.id = TSR.rider_id
		WHERE
			TSR.modified_datetime IS NULL
		AND	TSR.store_id = (
			SELECT
				store_id
			FROM
				TB_STORE_SESSION
			WHERE
				access_token = #{accessToken})
	</select>

	<update id="updatePushToken" parameterType="kr.co.cntt.core.model.rider.Rider">
		UPDATE TB_RIDER_SESSION
		SET
			modified_datetime = now()

		<if test="pushToken != null and pushToken != ''">
			, push_token=#{pushToken}
		</if>

		WHERE
			access_token = #{accessToken}
	</update>

	<!-- selectSubgroupRiderRels -->
	<select id="selectSubgroupRiderRels" parameterType="kr.co.cntt.core.model.common.Common" resultMap="selectSubgroupRiderRelsResult">
		SELECT A.id
			, A.name
			, A.status
			, A.working
			, A.chat_user_id
			, A.latitude
			, A.longitude
			, A.location_updated
			, C.id AS subgroup_id
			, C.group_id AS subgroup_group_id
			, C.name AS subgroup_name
			, C.admin_id AS subgroup_admin_id
			, D.id AS group_id
			, D.name AS group_name
			, D.admin_id AS group_admin_id
		FROM TB_RIDER AS A
		LEFT JOIN TB_SUBGROUP_RIDER_REL AS B
		ON A.id = B.rider_id
			AND B.deleted IS NULL
		LEFT JOIN TB_SUBGROUP AS C
		ON B.subgroup_id = C.id
		LEFT JOIN TB_GROUP AS D
		ON B.group_id = D.id
			AND C.deleted IS NULL
			AND D.deleted IS NULL
		WHERE A.admin_id = (SELECT admin_id FROM TB_STORE WHERE id = (SELECT store_id FROM TB_STORE_SESSION WHERE access_token = #{token}))
			AND A.deleted IS NULL;
	</select>

	<!-- selectRiderAssignmentStatus -->
	<select id="selectRiderAssignmentStatus" parameterType="kr.co.cntt.core.model.rider.Rider" resultType="java.lang.String">
		SELECT A.assignment_status
		FROM TB_STORE as A
		LEFT JOIN TB_SUBGROUP_RIDER_REL as B
		ON A.id = B.store_id
			AND B.rider_id = (SELECT rider_id FROM TB_RIDER_SESSION WHERE access_token = #{token})
		WHERE B.store_id = (SELECT store_id FROM TB_SUBGROUP_RIDER_REL WHERE rider_id =
							(SELECT rider_id FROM TB_RIDER_SESSION WHERE access_token = #{token}))
	</select>

	<!-- resetRiderReturnTime -->
	<update id="resetRiderReturnTime">
		UPDATE TB_RIDER
			SET return_time = IF(now() > DATE_ADD(return_time, INTERVAL 1 HOUR), NULL, return_time)
		WHERE return_time is not NULL;
	</update>


	<!-- selectForAssignRiders -->
	<select id="selectForAssignRiders" parameterType="String" resultMap="selectSubgroupRiderRelsResult">
		SELECT A.id
			, A.status
			, A.working
			, A.working_hours
			, A.rest_hours
			, A.latitude
			, A.longitude
			, B.subgroup_id
			, B.store_id
		FROM TB_RIDER AS A
		LEFT JOIN TB_SUBGROUP_RIDER_REL AS B
		ON A.id = B.rider_id
		WHERE B.subgroup_id = (SELECT subgroup_id FROM TB_SUBGROUP_RIDER_REL WHERE store_id = #{storeId} GROUP BY subgroup_id)
	</select>

</mapper>
 
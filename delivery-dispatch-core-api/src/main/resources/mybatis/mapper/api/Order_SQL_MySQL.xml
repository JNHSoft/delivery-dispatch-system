<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.cntt.core.mapper.OrderMapper">

    <!-- insertOrder -->
    <insert id="insertOrder" parameterType="kr.co.cntt.core.model.order.Order">
		INSERT INTO TB_ORDER (
			admin_id
			, store_id
			, address
			, detail_address
			, latitude
			, longitude
			, menu_name
			, menu_price
			, cooking_time
			, to_be_paid
			, message
			, phone
			, reservation
			, reservation_datetime
			, required_gender
			, device_os
			, status
			, created_datetime
		) VALUES(
			(SELECT admin_id FROM TB_STORE WHERE id = (SELECT store_id FROM TB_STORE_SESSION WHERE access_token = #{token}))
			, (SELECT store_id FROM TB_STORE_SESSION WHERE access_token = #{token})
			, #{address}
			, #{detailAddress}
			, #{latitude}
			, #{longitude}
			, #{menuName}
			, #{menuPrice}
			, #{cookingTime}
			, #{toBePaid}
			, #{message}
			, #{phone}
			, #{reservation}
			, #{reservationDatetime}
			, #{requiredGender}
			, #{deviceOs}
			, #{status}
			, now()
	  	)
	</insert>


	<!-- selectOrders -->
	<select id="selectOrders" parameterType="kr.co.cntt.core.model.common.Common" resultType="kr.co.cntt.core.model.order.Order">
		SELECT
			id
			, created_datetime
			, modified_datetime
			, address
		    , detail_address
			, latitude
			, longitude
			, status
			, menu_name
			, menu_price
			, cooking_time
			, to_be_paid
			, paid
			, message
			, phone
			, reservation
			, reservation_datetime
			, assigned_datetime
			, picked_up_datetime
			, completed_datetime
			, required_gender
			, device_os
		FROM TB_ORDER
		WHERE
			<choose>
				<when test="currentDatetime != null and currentDatetime != ''">
					created_datetime > date_sub(#{currentDatetime}, interval #{days} - 1 day)
				</when>
				<otherwise>
					created_datetime > CURRENT_DATE()
				</otherwise>
			</choose>

			<choose>
				<when test="role != null and role == 'ROLE_ADMIN'">
					AND admin_id = (SELECT admin_id FROM TB_ADMIN_SESSION WHERE access_token = #{token})
				</when>
				<when test="role != null and role == 'ROLE_STORE'">
					AND admin_id = (SELECT admin_id FROM TB_STORE WHERE id = (SELECT store_id FROM TB_STORE_SESSION WHERE access_token = #{token})	)
					AND store_id = (SELECT store_id FROM TB_STORE_SESSION WHERE access_token = #{token})
				</when>
				<when test="role != null and role == 'ROLE_RIDER'">
					AND admin_id = (SELECT admin_id FROM TB_STORE WHERE id = (SELECT rider_id FROM TB_RIDER_SESSION WHERE access_token = #{token})	)
					</when>
				<otherwise>
					id IS NULL
				</otherwise>
			</choose>
		ORDER BY created_datetime DESC
	</select>

</mapper>
 
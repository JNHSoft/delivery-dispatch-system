buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
    }
    ext['hibernate.version'] = '5.2.10.Final'
    repositories {
        maven {
            url 'http://192.168.170.112:9999/content/groups/public'
        }
    }
    dependencies {
//        classpath 'org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE'
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

allprojects {
    version = '0.0.2'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse-wtp'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    def defaultEncoding = 'UTF-8'
    tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }

    javadoc {
        options.encoding = defaultEncoding
        options.addBooleanOption('Xdoclint:none', true)
    }

    //test {
    //	include '**/model/**', '**/controller/**'
    //}

    /*
    springBoot {
        executable = true
        buildInfo()
    }
    */
    repositories {
        maven {
            url 'http://192.168.170.112:9999/content/groups/public'
        }
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.boot:spring-boot-starter-parent:${springBootVersion}'
        }
    }
    eclipse {
        project.natures 'org.springsource.ide.eclipse.gradle.core.nature'
        wtp {
            facet {
                facet name: 'jst.web', version: '3.1.0'
                facet name: 'java', version: '1.8'
                facet name: 'wst.jsdt.web', version: '1.0'
            }

            component {
                file {
                    withXml { provider ->
                        def module = provider.asNode().'wb-module'
                        module.'dependent-module'.findAll { it.@'handle'.startsWith('module:/classpath') }*.replaceNode {}
                    }
                }
            }
        }
    }
    dependencies {
        compileOnly 'org.projectlombok:lombok:1.16.16'
        /** hot swapper */
        //compile('org.springframework.boot:spring-boot-devtools')
        compile 'org.springframework.boot:spring-boot-starter-web'
        compile 'org.apache.tomcat:tomcat-jdbc:7.0.28'
        compile 'org.apache.tomcat.embed:tomcat-embed-jasper'
        compile 'javax.servlet:jstl'
        compile 'org.springframework.boot:spring-boot-starter-security'
        compile 'org.springframework.boot:spring-boot-starter-aop'
        compile 'org.springframework.boot:spring-boot-starter-cache'
        compile 'org.springframework.boot:spring-boot-starter-jdbc'
        compile 'com.microsoft.sqlserver:mssql-jdbc:6.2.2.jre8'
        compile 'org.springframework:spring-jdbc:+'
        compile 'commons-dbcp:commons-dbcp:1.4'
        compile 'mysql:mysql-connector-java:5.0.8'
        compile 'org.mybatis:mybatis:3.4.4'
        compile 'org.mybatis:mybatis-spring:1.3.0'
        compile 'com.github.pagehelper:pagehelper:5.0.0'
        compile 'org.springframework.mobile:spring-mobile-device'
        compile 'com.google.code.gson:gson:2.8.0'
        compile 'commons-collections:commons-collections'
        compile 'io.jsonwebtoken:jjwt:0.7.0'
        compile 'net.sf.ehcache:ehcache:2.10.4'
        compile 'org.apache.poi:poi:3.16'
        compile 'org.apache.poi:poi-ooxml:3.16'
        compile 'org.jolokia:jolokia-core:1.3.6'
//        compile 'cglib:cglib:3.2.6'
        compile 'com.google.maps:google-maps-services:0.2.6'
        compile 'org.apache.commons:commons-lang3:3.7'
        testCompileOnly 'org.projectlombok:lombok:1.16.16'
        testCompile 'org.springframework.boot:spring-boot-starter-test'
    }
}


project(':delivery-dispatch-core') {
    dependencies {
        compile 'kr.co.cntt.common:std-cntt-common-concurrent:1.0.2'
        compile 'kr.co.cntt.common:std-cntt-common-trace:1.0.3'
        compile 'kr.co.cntt.common:std-cntt-common-rest:1.0.6'
        compile 'kr.co.cntt.common:std-cntt-common-mail:1.0.2'
        //compileOnly 'kr.co.cntt.common:std-cntt-common-payment-kcp:1.0.6'
    }
}


project(':delivery-dispatch-core-admin') {
    dependencies {
        compileOnly project(':delivery-dispatch-core')
    }
}


project(':delivery-dispatch-core-api') {
    dependencies {
        compileOnly project(':delivery-dispatch-core')
    }
}


project(':delivery-dispatch-api') {
    apply plugin: 'war'
    war.archiveName 'ROOT.war'
    build.dependsOn ':delivery-dispatch-core:build'
    build.dependsOn ':delivery-dispatch-core-api:build'

    dependencies {
        compile project(':delivery-dispatch-core')
        compile project(':delivery-dispatch-core-api')
        compile 'org.tuckey:urlrewritefilter:4.0.4'
        providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    }
}

project(':delivery-dispatch-admin') {
    apply plugin: 'war'
    war.archiveName 'ROOT.war'
    build.dependsOn ':delivery-dispatch-core:build'
    build.dependsOn ':delivery-dispatch-core-admin:build'

    dependencies {
        compile project(':delivery-dispatch-core')
        compile project(':delivery-dispatch-core-admin')
        compile 'org.tuckey:urlrewritefilter:4.0.4'
        providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    }
}


project(':delivery-dispatch-mvc') {
    apply plugin: 'war'
    war.archiveName 'ROOT.war'
    build.dependsOn ':delivery-dispatch-core:build'

    dependencies {
        compile project(':delivery-dispatch-core')
        compile 'org.tuckey:urlrewritefilter:4.0.4'
        providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    }
}